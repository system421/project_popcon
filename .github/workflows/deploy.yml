name: Deploy Spring Boot to AWS Elastic Beanstalk

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  ECR_REPOSITORY: popcon/projectpopcon
  EB_APP_NAME: POPCONDOCKERAPP 
  EB_ENV_NAME: POPCONDOCKERAPP-env
  DEPLOY_PACKAGE_NAME: eb-deploy-${{ github.sha }}.zip

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out the code
      uses: actions/checkout@v3
    - run: touch ./src/main/resources/application.properties
    - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties
    - run: cat ./src/main/resources/application.properties
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Docker 이미지 빌드
        echo "FROM openjdk:11-jre-slim" > Dockerfile
        echo "ARG JAR_FILE=target/*.jar" >> Dockerfile
        echo "COPY \${JAR_FILE} app.jar" >> Dockerfile
        echo "EXPOSE 8080" >> Dockerfile
        echo "ENTRYPOINT [\"java\",\"-jar\",\"-Dserver.port=8080\",\"/app.jar\"]" >> Dockerfile
        
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Generate deployment package
      run: |
        echo '{"AWSEBDockerrunVersion":"1","Image":{"Name":"${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}","Update":"true"},"Ports":[{"ContainerPort":8080,"HostPort":8080}]}' > Dockerrun.aws.json
        zip -r ${{ env.DEPLOY_PACKAGE_NAME }} Dockerrun.aws.json

    - name: Upload package to S3 bucket
      run: |
        aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ secrets.EB_S3_BUCKET }}/

    - name: Create new ElasticBeanstalk Application Version
      run: |
        aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APP_NAME }} \
          --source-bundle S3Bucket="${{ secrets.EB_S3_BUCKET }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "ver-${{ github.sha }}" \
          --description "commit-sha-${{ github.sha }}"

    - name: Deploy to ElasticBeanstalk
      run: |
        aws elasticbeanstalk update-environment \
          --environment-name ${{ env.EB_ENV_NAME }} \
          --version-label "ver-${{ github.sha }}"
